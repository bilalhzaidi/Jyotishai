"""Database utilities for the JyotishAI chat feature.

This module defines the SQLModel engine, session generator and the
ChatLog model used to persist chat interactions.  It uses SQLite as
the underlying database and stores the database file in the current
working directory under `chat.db`.
"""

from __future__ import annotations

from datetime import datetime
from typing import Generator, Optional

from sqlmodel import SQLModel, Field, Session, create_engine

# SQLite database URL for chat logs.  Using a relative path keeps the
# database local to the project directory.  Adjust as needed.
DATABASE_URL = "sqlite:///./chat.db"

engine = create_engine(DATABASE_URL, echo=False)


class ChatLog(SQLModel, table=True):
    """Table for storing chat history.

    Attributes:
        id: Primary key identifier.
        user_message: The message sent by the user.
        bot_response: The response generated by the model.
        timestamp: When the interaction occurred.
    """

    id: Optional[int] = Field(default=None, primary_key=True)
    user_message: str
    bot_response: str
    timestamp: datetime = Field(default_factory=datetime.utcnow)


def init_db() -> None:
    """Create database tables if they do not already exist."""
    SQLModel.metadata.create_all(engine)


def get_session() -> Generator[Session, None, None]:
    """Yield a new SQLModel session.

    This helper is intended for use with FastAPI's dependency injection.
    """
    with Session(engine) as session:
        yield session